plugins {
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.benchmark'
version = rootProject.getVersion()

jacoco {
    toolVersion = "0.8.8"
}

java {
    sourceCompatibility = '17'
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation "io.jsonwebtoken:jjwt-api:0.11.1"
    testImplementation 'org.testng:testng:7.1.0'
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.1"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.1"
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    testImplementation "org.testcontainers:testcontainers:1.19.3"
    testImplementation "org.testcontainers:junit-jupiter:1.19.3"
    testImplementation "org.testcontainers:postgresql:1.19.3"

    implementation 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

ext {
    snippetsDir = file("build/generated-snippets")
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

/**
 * REST Docs Setup
 */

tasks.register("restDocsTest", Test) {
    outputs.dir snippetsDir
    useJUnitPlatform {
        includeTags("restDocs")
    }

    finalizedBy "asciidoctor"
}

tasks.register("apiBuild", GradleBuild) {
    tasks = ["clean", "restDocsTest", "build"]
}

tasks.named("asciidoctor") {
    dependsOn restDocsTest
    dependsOn "test"

    inputs.dir snippetsDir
    configurations "asciidoctorExt"
    baseDirFollowsSourceDir() // 원본파일작업은 .adoc 디렉터리 기준
}

/**
 * Jacoco test report Setup
 */

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            enabled = true

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.60
            }
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.60
            }
        }
    }
}
